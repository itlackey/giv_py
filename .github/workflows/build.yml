name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi

      - name: Run tests
        run: poetry run pytest -q

      - name: Debug Poetry environment
        run: |
          poetry env info
          poetry run python -c "import sys; print('Python path:', sys.path[:3])"
          poetry run python -c "import packaging; print('packaging version:', packaging.__version__)"

      - name: Build executable using build system
        run: poetry run python build/build.py binaries

      - name: List build outputs
        run: find dist/ -type f -name "*" 2>/dev/null || echo "No dist directory found"

      - name: Archive artifact
        if: hashFiles('dist/**/*') != ''
        uses: actions/upload-artifact@v4
        with:
          name: giv-${{ matrix.os }}
          path: dist/